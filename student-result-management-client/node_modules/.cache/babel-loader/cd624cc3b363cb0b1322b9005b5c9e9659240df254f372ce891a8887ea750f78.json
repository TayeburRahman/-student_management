{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const authSlice = createApi({\n  reducerPath: 'authApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost6060'\n  }),\n  endpoints: builder => ({\n    getRegisterUser: builder.query({\n      query: () => '/api/v1/admin/signup'\n    }),\n    registration: builder.mutation({\n      query: credentials => ({\n        url: '/api/v1/admin/signup',\n        method: 'POST',\n        body: credentials\n      }),\n      async onQueryStarted(query, _ref) {\n        let {\n          queryFulfilled,\n          dispatch\n        } = _ref;\n        try {\n          const {\n            data: user\n          } = await queryFulfilled;\n          dispatch(setUser({\n            user\n          }));\n          dispatch(addMessage({\n            message: 'Registration successful',\n            type: 'success'\n          }));\n        } catch (error) {\n          var _error$error, _error$error$data;\n          dispatch(addMessage({\n            message: (error === null || error === void 0 ? void 0 : (_error$error = error.error) === null || _error$error === void 0 ? void 0 : (_error$error$data = _error$error.data) === null || _error$error$data === void 0 ? void 0 : _error$error$data.message) || error.message || 'Registration failed',\n            type: 'error'\n          }));\n        }\n      },\n      transformResponse(baseQueryReturnValue, meta, arg) {\n        return baseQueryReturnValue.user;\n      }\n    })\n  })\n});\nexport const {\n  useGetRegisterUserQuery\n} = authSlice;","map":{"version":3,"names":["createApi","fetchBaseQuery","authSlice","reducerPath","baseQuery","baseUrl","endpoints","builder","getRegisterUser","query","registration","mutation","credentials","url","method","body","onQueryStarted","queryFulfilled","dispatch","data","user","setUser","addMessage","message","type","error","transformResponse","baseQueryReturnValue","meta","arg","useGetRegisterUserQuery"],"sources":["/media/tayebur/D40421030420E9E6/project/node&React/student-result-management/student-result-management-client/src/features/auth/authSlice.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const authSlice = createApi({\n    reducerPath: 'authApi',\n    baseQuery: fetchBaseQuery({\n        baseUrl:'http://localhost6060',\n\n    }),\n    endpoints: (builder) => ({\n        getRegisterUser: builder.query({\n            query: () => '/api/v1/admin/signup'\n        }),\n\n        registration: builder.mutation({\n            query: (credentials) => ({\n                url: '/api/v1/admin/signup',\n                method: 'POST',\n                body: credentials,\n            }),\n\n            async onQueryStarted(query, { queryFulfilled, dispatch }) {\n                try {\n                    const { data: user } = await queryFulfilled;\n\n                    dispatch(setUser({ user }));\n\n                    dispatch(\n                        addMessage({\n                            message: 'Registration successful',\n                            type: 'success',\n                        })\n                    );\n                } catch (error) {\n                    dispatch(\n                        addMessage({\n                            message:\n                                error?.error?.data?.message ||\n                                error.message ||\n                                'Registration failed',\n                            type: 'error',\n                        })\n                    );\n                }\n            },\n\n            transformResponse(baseQueryReturnValue, meta, arg) {\n                return baseQueryReturnValue.user;\n            },\n        }),\n\n\n    })\n        \n})\n\nexport const {useGetRegisterUserQuery} = authSlice;"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,OAAO,MAAMC,SAAS,GAAGF,SAAS,CAAC;EAC/BG,WAAW,EAAE,SAAS;EACtBC,SAAS,EAAEH,cAAc,CAAC;IACtBI,OAAO,EAAC;EAEZ,CAAC,CAAC;EACFC,SAAS,EAAGC,OAAO,KAAM;IACrBC,eAAe,EAAED,OAAO,CAACE,KAAK,CAAC;MAC3BA,KAAK,EAAE,MAAM;IACjB,CAAC,CAAC;IAEFC,YAAY,EAAEH,OAAO,CAACI,QAAQ,CAAC;MAC3BF,KAAK,EAAGG,WAAW,KAAM;QACrBC,GAAG,EAAE,sBAAsB;QAC3BC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACV,CAAC,CAAC;MAEF,MAAMI,cAAc,CAACP,KAAK,QAAgC;QAAA,IAA9B;UAAEQ,cAAc;UAAEC;QAAS,CAAC;QACpD,IAAI;UACA,MAAM;YAAEC,IAAI,EAAEC;UAAK,CAAC,GAAG,MAAMH,cAAc;UAE3CC,QAAQ,CAACG,OAAO,CAAC;YAAED;UAAK,CAAC,CAAC,CAAC;UAE3BF,QAAQ,CACJI,UAAU,CAAC;YACPC,OAAO,EAAE,yBAAyB;YAClCC,IAAI,EAAE;UACV,CAAC,CAAC,CACL;QACL,CAAC,CAAC,OAAOC,KAAK,EAAE;UAAA;UACZP,QAAQ,CACJI,UAAU,CAAC;YACPC,OAAO,EACH,CAAAE,KAAK,aAALA,KAAK,uCAALA,KAAK,CAAEA,KAAK,sEAAZ,aAAcN,IAAI,sDAAlB,kBAAoBI,OAAO,KAC3BE,KAAK,CAACF,OAAO,IACb,qBAAqB;YACzBC,IAAI,EAAE;UACV,CAAC,CAAC,CACL;QACL;MACJ,CAAC;MAEDE,iBAAiB,CAACC,oBAAoB,EAAEC,IAAI,EAAEC,GAAG,EAAE;QAC/C,OAAOF,oBAAoB,CAACP,IAAI;MACpC;IACJ,CAAC;EAGL,CAAC;AAEL,CAAC,CAAC;AAEF,OAAO,MAAM;EAACU;AAAuB,CAAC,GAAG5B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}