{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const authSlice = createApi({\n  reducerPath: 'authApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:6060'\n  }),\n  endpoints: builder => ({\n    getRegisterUser: builder.mutation({\n      query: data => ({\n        url: '/api/v1/admin/login',\n        method: 'POST',\n        body: data\n      })\n    }),\n    registration: builder.mutation({\n      query: data => ({\n        url: '/api/v1/admin/signup',\n        method: 'POST',\n        body: data\n      })\n\n      // async onQueryStarted(query, { queryFulfilled, dispatch }) {\n      //     try {\n      //         const { data: user } = await queryFulfilled;\n\n      //         dispatch(setUser({ user }));\n\n      //         dispatch(\n      //             addMessage({\n      //                 message: 'Registration successful',\n      //                 type: 'success',\n      //             })\n      //         );\n      //     } catch (error) {\n      //         dispatch(\n      //             addMessage({\n      //                 message:\n      //                     error?.error?.data?.message ||\n      //                     error.message ||\n      //                     'Registration failed',\n      //                 type: 'error',\n      //             })\n      //         );\n      //     }\n      // },\n\n      // transformResponse(baseQueryReturnValue, meta, arg) {\n      //     return baseQueryReturnValue.user;\n      // },\n    })\n  })\n});\n\nexport const {\n  useGetRegisterUserQuery,\n  useRegistrationMutation\n} = authSlice;","map":{"version":3,"names":["createApi","fetchBaseQuery","authSlice","reducerPath","baseQuery","baseUrl","endpoints","builder","getRegisterUser","mutation","query","data","url","method","body","registration","useGetRegisterUserQuery","useRegistrationMutation"],"sources":["/media/tayebur/D40421030420E9E6/project/node&React/student-result-management/student-result-management-client/src/features/auth/authSlice.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const authSlice = createApi({\n    reducerPath: 'authApi',\n    baseQuery: fetchBaseQuery({\n        baseUrl:'http://localhost:6060',\n\n    }),\n    endpoints: (builder) => ({\n        getRegisterUser: builder.mutation({\n            query: (data) => ({\n                url: '/api/v1/admin/login',\n                method: 'POST',\n                body: data, \n            }),\n        }),\n\n        registration: builder.mutation({\n            query: (data) => ({\n                url: '/api/v1/admin/signup',\n                method: 'POST',\n                body: data, \n            }),\n\n            // async onQueryStarted(query, { queryFulfilled, dispatch }) {\n            //     try {\n            //         const { data: user } = await queryFulfilled;\n\n            //         dispatch(setUser({ user }));\n\n            //         dispatch(\n            //             addMessage({\n            //                 message: 'Registration successful',\n            //                 type: 'success',\n            //             })\n            //         );\n            //     } catch (error) {\n            //         dispatch(\n            //             addMessage({\n            //                 message:\n            //                     error?.error?.data?.message ||\n            //                     error.message ||\n            //                     'Registration failed',\n            //                 type: 'error',\n            //             })\n            //         );\n            //     }\n            // },\n\n            // transformResponse(baseQueryReturnValue, meta, arg) {\n            //     return baseQueryReturnValue.user;\n            // },\n        }),\n\n\n    })\n        \n})\n\nexport const {useGetRegisterUserQuery, useRegistrationMutation} = authSlice;"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,OAAO,MAAMC,SAAS,GAAGF,SAAS,CAAC;EAC/BG,WAAW,EAAE,SAAS;EACtBC,SAAS,EAAEH,cAAc,CAAC;IACtBI,OAAO,EAAC;EAEZ,CAAC,CAAC;EACFC,SAAS,EAAGC,OAAO,KAAM;IACrBC,eAAe,EAAED,OAAO,CAACE,QAAQ,CAAC;MAC9BC,KAAK,EAAGC,IAAI,KAAM;QACdC,GAAG,EAAE,qBAAqB;QAC1BC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACV,CAAC;IACL,CAAC,CAAC;IAEFI,YAAY,EAAER,OAAO,CAACE,QAAQ,CAAC;MAC3BC,KAAK,EAAGC,IAAI,KAAM;QACdC,GAAG,EAAE,sBAAsB;QAC3BC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACV,CAAC;;MAED;MACA;MACA;;MAEA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;IACJ,CAAC;EAGL,CAAC;AAEL,CAAC,CAAC;;AAEF,OAAO,MAAM;EAACK,uBAAuB;EAAEC;AAAuB,CAAC,GAAGf,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}